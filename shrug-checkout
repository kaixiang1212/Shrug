#!/bin/dash

# Not a shrug repository
if [ ! -d ".shrug" ]
then
    echo "$0: error: no .shrug directory containing shrug repository exists" >>/dev/stderr
    exit 1
# No arguments
elif [ $# -ne 1 ] 
then
    echo "usage: shrug-checkout <branch>"
    exit 1
# No commit
elif [ ! -f ".shrug/log" ]
then
    echo "$0: error: your repository does not have any commits yet" >> /dev/stderr
    exit 1;
fi

# Check if target branch exist
branches=`shrug-branch`
target_branch=""
current_branch=`cat .shrug/current_branch`

for br in $branches
do
    if [ $br = $1 ]
    then
        branch=$br
    fi
done

if [ -z $target_branch ]
then
    echo "$0: error: unknown branch '$1'" >>/dev/stderr
    exit 1
elif [ "$target_branch" = "$current_branch" ]
then
    echo "Already on '$target_branch'"
    exit 0 
fi

# Check if any changes in commit made since last checkout
#   Update changes to branch if changes were made, ignore otherwise
cp -rf .shrug/commit .shrug/branch/$current_branch
cp .shrug/log .shrug/branch/$current_branch


# Check if target branch and current branch has different commit
current_branch_commit=`(cd .shrug/branch/$current_branch ;find -type f -exec sha256sum {} \;) | sha256sum`
target_branch_commit=`(cd .shrug/branch/$target_branch ;find -type f -exec sha256sum {} \;) | sha256sum`

# target branch commit = current branch commit
if [ "$current_branch_commit" = "$target_branch_commit" ]
then
    echo "$target_branch" > .shrug/current_branch
    echo "Switched to branch '$target_branch'"
    exit 0
# target branch commit != current branch commit
else
    # If changes was made in index but not committed
    changes=`shrug-status | egrep "file changed|added to index|deleted"`
    if [ -n "$changes" ]
    then
        echo "$0: error: Your changes to the following files would be overwritten by checkout:" >>/dev/stderr
        files=`echo $changes | cut -d " " -f1`
        for file in $files
        do
            echo "$file" >>/dev/stderr
        done
        exit 1
    fi

    # Compare target branch commit with local index to see if any changed file
    target_commit_no=`find .shrug/branch/$target_branch/commit -mindepth 1 -type d -exec basename {} \; | sort | tail -1`
    target_files=`find .shrug/branch/$target_branch/commit/$target_commit_no -type f -exec basename {} \;`
    override=""
    for file in $target_files
    do
        if [ -f $file ] && [ ! -f .shrug/index/$file ]
        then
            override=`echo $file $override`
        fi
    done
    if [ -n "$override" ]
    then
        echo "$0: error: Your changes to the following files would be overwritten by checkout:" >>/dev/stderr
        for file in $override
        do
            echo "$file" >>/dev/stderr
        done
        exit 1
    fi

    local_tracked_files=`shrug-status | egrep -v "untracked" | cut -d " " -f1`
    # Remove any files associated to current branch
    for file in $local_tracked_files
    do
        rm -rf $file
        rm -rf .shrug/index/$file
    done
    rm -rf .shrug/commit
    rm -rf .shrug/log

    # Add files associated to target branch
    cp -r .shrug/branch/$target_branch/commit .shrug/
    cp .shrug/branch/$target_branch/log .shrug/
    for file in $target_files
    do
        cp .shrug/commit/$target_commit_no/$file .
        cp .shrug/commit/$target_commit_no/$file .shrug/index
    done
    echo "$target_branch" > .shrug/current_branch
    echo "Switched to branch '$target_branch'"
fi
